#pragma once

#include <stdio.h>
#include <io.h>
#include <stdlib.h>
#include <memory.h>

//----------------------
#define R0		1
#define R1		2
#define R2		3
#define	R3		4
#define	R4		5
#define R5		6
#define R6		7

#define IP		8
#define	SP		9
#define	BP		10

#define FLAGS	0

//------------
#define REG_TYPE		(BYTE)1
#define CONST_TYPE		(BYTE)2

//----------------------
typedef unsigned int	uint32_t;
typedef int		DWORD;
typedef char	BYTE;
typedef BYTE	op_type;

//----------------------
typedef struct _VM_ {
	uint32_t* CS;
	uint32_t* SS;
	uint32_t* DS;

	uint32_t REG[11];


} vm_, *vm_ptr;

typedef struct _OP_ {
	op_type type;
	DWORD value;
}OP;

#define _MOV_OPCODE_		\
	{ 0x00, 0x01, 0x01, 0x01 }, \
	{ 0x00, 0x01, 0x01, 0x02 }

#define _ADD_OPCODE_		\
	{ 0x00, 0x02, 0x01, 0x01 }, \
	{ 0x00, 0x02, 0x01, 0x02 }

#define OPCODE_TABLE		\
	{\
		_MOV_OPCODE_, \
		_ADD_OPCODE_ \
	}
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 }, \ 
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01 }, \
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02 }, \
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03 }, \
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01 }, \
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02 }, \
		//{ 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02 }, \
		//{ 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03 } \
	//}


#define INTSR_COUNT	43
//static uint32_t** opcode_table;
static BYTE table[4][4] = OPCODE_TABLE;
//----------------------
static void _generate_opcode_table_();

void _vm_init_(vm_ptr vm);
DWORD _vm_destruct_(vm_ptr vm);

void _vm_mov_(vm_ptr vm, BYTE op1, OP op2);
void _vm_add_(vm_ptr vm, OP op1, OP op2);
void _vm_sub_(vm_ptr vm, OP op1, OP op2);
void _vm_xor_(vm_ptr vm, OP op1, OP op2);
void _vm_and_(vm_ptr vm, OP op1, OP op2);
void _vm_or_(vm_ptr vm, OP op1, OP op2);
void _vm_push_(vm_ptr vm, OP op);
void _vm_pop_(vm_ptr vm, OP op);
void _vm_call_(vm_ptr vm, DWORD addr);

void foo();

